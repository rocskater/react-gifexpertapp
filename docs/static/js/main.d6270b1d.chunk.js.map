{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MASlB,SAGI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAxBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCHlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAOF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACtB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBhBM,GAhBgB,4CAAH,sDCHPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAG/B,OACI,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAMzB,CAACpB,IAIGqB,EDrBwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEWH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEdrBgB,EAAe,WAIxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCtB7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d6270b1d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e)=>{\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if(inputValue.trim().length>2){\n            setCategories(cats => [inputValue, ...cats]);\n            setinputValue('');\n        }\n\n        // console.log(' Submit Hecho');\n\n    }\n\n    return(\n\n        <form onSubmit = {handleSubmit}>\n\n            {/* <h1>{inputValue}</h1> */}\n            <input\n                type='text'\n                value ={inputValue}\n                onChange = {handleInputChange}\n            />\n        </form>\n        \n    )\n}\n\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\n\n\nexport const getGifs = async (category) =>{\n\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category)}&limit=10&api_key=PI6g3VpO7YaR0eNicQ6IdyKgXZXXvff9`;\n    const resp= await fetch (url);\n    const {data} = await resp.json();\n\n    const gifs =data.map(img=>{\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n\n\n\nreturn gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n\n    // console.log(title,url);\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            \n            <img src={url} alt ={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n\n    const {data:images, loading }= useFetchGifs(category);\n    \n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        {loading && <p className='animate__animated animate__flash'>loading</p>}\n        <div className=\"card-grid\">\n               {\n                   images.map( img =>(\n                       <GifGridItem\n                       key = {img.id}\n                       {...img}\n                       />\n                   ))\n               }\n        </div>\n        </>\n    )\n }","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\nexport const useFetchGifs = (category) =>{\n\n    const [state, setstate] = useState({\n        data:[],\n        loading:true,\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs=>{\n\n                    setstate({\n                        data:imgs,\n                        loading:false\n                    });\n   \n            })\n\n\n    }, [category]);\n\n        \n\n    return state; //{data[], loading:true}\n\n}","// import React from 'react'\nimport React, { useState } from \"react\"\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    \n    const [categories, setCategories] = useState(['One Punch']);\n    \n    // const handleAdd=() =>{\n    // //    setCategories( ['HunterXHunter',...categories]);\n    // setCategories (cats => [...cats,'HunterXHunter']);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n            <AddCategory setCategories ={setCategories}/>\n            <hr/>\n\n            <ol>\n                { \n                    categories.map(category =>(\n                        <GifGrid \n                        key={category}\n                        category={category}/>\n                        // return <li key={category}>{category}</li>\n                    ))\n                }\n            </ol>\n\n           \n        </>\n    )\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}